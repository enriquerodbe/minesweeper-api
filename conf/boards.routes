###
# summary: Create a new board for the logged in user
# requestBody:
#   description: The new board data
#   required: true
#   content:
#     application/json:
#       schema:
#         $ref: '#/components/schemas/BoardConfiguration'
# responses:
#   201:
#     description: Board created successfully
#     content:
#       application/json:
#         schema:
#           $ref: '#/components/schemas/BoardSummary'
#   400:
#     description: Invalid input data
###
POST  /    board.BoardController.create()

###
# summary: Get all boards for the logged in user
# responses:
#   200:
#     description: List of a user's boards
#     content:
#       application/json:
#         schema:
#           type: array
#           items:
#             $ref: '#/components/schemas/BoardSummary'
###
GET  /    board.BoardController.retrieveAll()

###
# summary: Get details of a board
# responses:
#   200:
#     description: Board details
#     content:
#       application/json:
#         schema:
#           $ref: '#/components/schemas/BoardDetails'
#   404:
#     description: Board not found
###
GET  /:boardUid    board.BoardController.retrieve(boardUid: String)

###
# summary: Make a move
# requestBody:
#   description: Player move
#   required: true
#   content:
#      application/json:
#        schema:
#          $ref: '#/components/schemas/PlayerMove'
# responses:
#   200:
#     description: Board details after player move
#     content:
#       application/json:
#         schema:
#           $ref: '#/components/schemas/BoardDetails'
#   400:
#     description: Invalid input data
#   404:
#     description: Board not found
###
POST  /:boardUid/moves    board.BoardController.move(boardUid: String)

###
# summary: Change preserved/resumed board status
# requestBody:
#   description: Current status
#   required: true
#   content:
#      application/json:
#        schema:
#          $ref: '#/components/schemas/BoardStatus'
# responses:
#   200:
#     description: Board details after status change
#     content:
#       application/json:
#         schema:
#           $ref: '#/components/schemas/BoardSummary'
#   400:
#     description: Invalid input data
#   404:
#     description: Board not found
###
POST  /:boardUid/statuses    board.BoardController.changeStatus(boardUid: String)
